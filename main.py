import telebot
import shutil
from telebot import types
from random import choice
from telebot.types import ReplyKeyboardRemove
from for_questions import send_questions, show_questions, get_id_from_question, delete_questions
from add_new import check_admin_status, add_admin, delete_your_admins, add_user, ladmins
from for_yandex_disk import download_file_to_club
from for_file_and_req import slim_shady, count_of_users, grading, make_new_folder_from_user, get_clubs
from for_db_tasks import insert_into_db_data, get_data_from_column

# 7050246509:AAHKETNv4k6_Z6FQ37bkCh1QJlqFABpJ2Mo - –æ—Å–Ω–æ–≤–Ω–æ–π
# 6996070096:AAHKAAZEvorjnwrd7Fec9kbYzRSt7qTXV7k - –≠—Ñ–µ
# 7072278948:AAHULSz4lWo-FADGtYPvT8zvug3RpySHIFA - –î–µ–Ω–∏—Å–∞
bot = telebot.TeleBot('6996070096:AAHKAAZEvorjnwrd7Fec9kbYzRSt7qTXV7k')

GREETINGS = ['–ü—Ä–∏–≤–µ—Ç', '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å',
             '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ', '–î–æ–±—Ä—ã–π –¥–µ–Ω—å',
             '–°–∞–ª—é—Ç', '–•–∞–π', '–ó–¥—Ä–∞–≤–∏—è –∂–µ–ª–∞—é'
             ]

GOODBYES = ['–î–æ —Å–≤–∏–¥–∞–Ω–∏—è', '–í—Å–µ–≥–æ —Ö–æ—Ä–æ—à–µ–≥–æ',
            '–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ', '–î–æ –≤—Å—Ç—Ä–µ—á–∏',
            '–ü—Ä–æ—â–∞–π—Ç–µ', '–ë—ã–≤–∞–π', '–ü–æ–∫–∞',
            ]

consult = show_questions()
CLUB = get_clubs()


def start_markup():
    markup = types.InlineKeyboardMarkup(row_width=True)
    link_keyboard1 = types.InlineKeyboardButton(text="–∫–∞–Ω–∞–ª", url="https://t.me/gymnastkapolechka")
    link_keyboard2 = types.InlineKeyboardButton(text="2 –∫–∞–Ω–∞–ª", url="https://t.me/rg_child_league")
    check_keyboard = types.InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å", callback_data="check")
    markup.add(link_keyboard1, link_keyboard2, check_keyboard)

    return markup


@bot.message_handler(commands=['start', 'hello', '–ø—Ä–∏–≤–µ—Ç', 'hi'])
def start(message):
    bot.send_message(message.chat.id, choice(GREETINGS))
    name = message.from_user.first_name

    if name == 'Uniade bot':
        name = message.chat.first_name

    bot.send_message(message.chat.id, name)

    if check(message, message.chat.id) and check_channels_start(message):
        admin(message)


def check(message, chat_id):
    st = bot.get_chat_member(chat_id, user_id=message.chat.id).status
    return st in ["creator", "administrator", "member"]


def check_channels_start(message):
    markup = types.InlineKeyboardMarkup(row_width=True)
    if check(message, "-1001649523664") and check(message, '-1001729713697'):
        bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É ‚ú®")
        markup.add(admin(message))
    else:
        bot.send_message(message.chat.id, "–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã", reply_markup=start_markup())


def check_channels(message):
    if check(message, "-1001649523664") and check(message, '-1001729713697'):
        return True
    else:
        bot.send_message(message.chat.id, "–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã", reply_markup=start_markup())


def admin(message):
    a = bot.send_message(message.chat.id, 'delete', reply_markup=ReplyKeyboardRemove())
    bot.delete_message(message.chat.id, a.message_id)

    markup = make_main_markup(message)

    bot.send_message(message.chat.id, '–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ç–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:', reply_markup=markup)


@bot.message_handler(commands=['bye', 'end', '–ø–æ–∫–∞'])
def bye(message):
    bot.send_message(message.chat.id, choice(GOODBYES))


@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback):
    if check(callback.message, callback.message.chat.id) and check_channels(callback.message):
        id_of_user = callback.message.chat.id
        print(f"{get_data_from_column('Command', id_of_user)} - command by "
              f"{get_data_from_column('User_name', id_of_user)}")
        if callback.data == 'add_new_admin':
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            bot.send_message(callback.message.chat.id,
                             "–ù–∞–ø–∏—à–∏—Ç–µ '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ' –≤–∞—à–µ–≥–æ –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞",
                             reply_markup=btn_for_exit()
                             )

            file = open('data/telegram_username.jpg', 'rb')
            bot.send_photo(callback.message.chat.id, file)
            insert_into_db_data('add_admin', 'Command', id_of_user)
            bot.register_next_step_handler(callback.message, inp_name)
        elif callback.data == 'delete_admin':
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            insert_into_db_data('delete_admin', 'Command', id_of_user)
            del_admin(callback.message)
        elif callback.data == 'our_social_networks':
            bot.send_message(callback.message.chat.id, '–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–∞—à–∏ –∫–∞–Ω–∞–ª—ã –≤ –¢–µ–ª–µ–≥—Ä–∞–º–º'
                                                       ' –∏ –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –º–Ω–æ–≥–æ–µ —Ç–∞–º')
            markup = types.InlineKeyboardMarkup()
            markup.add(
                types.InlineKeyboardButton('VK', url='https://vk.com/club211067501'))
            markup.add(
                types.InlineKeyboardButton('YouTube üî∫', url='https://youtu.be/hVMKtZ6W0n8?si=M9X9P67CwyKHv2HJ'))
            bot.reply_to(callback.message,
                         '–ù–æ –∫—Ä–æ–º–µ —ç—Ç–æ–≥–æ, —Å–æ–≤–µ—Ç—É–µ–º –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –ø–∞–±–ª–∏–∫ –í–ö –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ –æ –Ω–∞—Å',
                         reply_markup=markup)
        elif callback.data == 'music':
            insert_into_db_data('send_file_to_folder', 'Command', id_of_user)
            bot.edit_message_text(f'–í—ã–±–µ—Ä–µ—Ç–µ –ø–∞–ø–∫—É:',
                                  reply_markup=show_club(),
                                  chat_id=callback.message.chat.id,
                                  message_id=callback.message.message_id)
        elif callback.data == 'F_A_Q':
            bot.edit_message_text(f'–í–æ–ø—Ä–æ—Å—ã:',
                                  reply_markup=questions(),
                                  chat_id=callback.message.chat.id,
                                  message_id=callback.message.message_id)
        elif callback.data == 'grade':
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            bot.send_message(callback.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –§–∞–º–∏–ª–∏—é –ò–º—è –≥–∏–º–Ω–∞—Å—Ç–∫–∏:",
                             reply_markup=btn_for_exit())
            bot.register_next_step_handler(callback.message, grade)
        elif callback.data == 'show_questions_from_users':
            bot.edit_message_text(f'–í–æ–ø—Ä–æ—Å—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:',
                                  reply_markup=show_questions_from_users(),
                                  chat_id=callback.message.chat.id,
                                  message_id=callback.message.message_id)
        elif callback.data == 'send_questions':
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            bot.send_message(callback.message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å", reply_markup=btn_for_exit())
            bot.register_next_step_handler(callback.message, inp_question)
        elif callback.data == 'video_live':
            markup = types.InlineKeyboardMarkup()
            markup.add(
                types.InlineKeyboardButton('–¢—Ä–∞–Ω—Å–ª—è—Ü–∏—è', url='https://vk.com/video-211067501_456239145'))
            bot.reply_to(callback.message,
                         '–°–∫–æ—Ä–µ–µ —Å–º–æ—Ç—Ä–µ—Ç—å!!!',
                         reply_markup=markup)
        elif callback.data == 'text_live':
            markup = types.InlineKeyboardMarkup()
            markup.add(
                types.InlineKeyboardButton('–†–µ–ø–æ—Ä—Ç–∞–∂', url='https://vk.com/textlive547685'))
            bot.reply_to(callback.message,
                         '–°–∫–æ—Ä–µ–µ —á–∏—Ç–∞—Ç—å!!!',
                         reply_markup=markup)

        elif callback.data in CLUB:
            if get_data_from_column('Command', id_of_user) == 'get_table':
                bot.delete_message(callback.message.chat.id, callback.message.message_id)
                f1 = slim_shady(callback.data)
                bot.send_document(callback.message.chat.id, f1, reply_markup=btn_for_exit())
            elif get_data_from_column('Command', id_of_user) == 'send_file_to_folder':
                insert_into_db_data(callback.data, 'Your_club', id_of_user)
                bot.delete_message(callback.message.chat.id, callback.message.message_id)
                bot.send_message(callback.message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –§–ò–û', reply_markup=btn_for_exit())
                bot.register_next_step_handler(callback.message, inp_folder)
        elif callback.data.isdigit():
            if [i for i in consult if int(callback.data) == i[0]] and callback.data.isdigit():
                insert_into_db_data('answer_to_question', 'Command', id_of_user)
                bot.delete_message(callback.message.chat.id, callback.message.message_id)
                bot.send_message(callback.message.chat.id, f"–í—ã –≤—ã–±—Ä–∞–ª–∏ '{consult[int(callback.data) - 1][1]}'")
                insert_into_db_data(consult[int(callback.data) - 1][1], 'Printed_work', id_of_user)
                bot.register_next_step_handler(callback.message, answer)

        elif callback.data == 'show_count_of_users':
            c_of_users = count_of_users()
            bot.send_message(callback.message.chat.id, c_of_users)
        elif callback.data == 'table':
            insert_into_db_data('get_table', 'Command', id_of_user)
            bot.edit_message_text(f'–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç—É—Ä–Ω–∏—Ä:',
                                  reply_markup=change_on_table(),
                                  chat_id=callback.message.chat.id,
                                  message_id=callback.message.message_id)

        elif callback.data == 'qw_1':
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            file = open('data/checkroom0.jpg', 'rb')
            bot.send_photo(callback.message.chat.id, file)
            bot.send_message(callback.message.chat.id,
                             '–í–æ–π–¥—è —á–µ—Ä–µ–∑ –≥–ª–∞–≤–Ω—ã–π –≤—Ö–æ–¥, –ø—Ä–æ—Ö–æ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ —Ç—É—Ä–Ω–∏–∫–µ—Ç –∏ –∑–∞–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç–µ –Ω–∞–ø—Ä–∞–≤–æ')
            file = open('data/checkroom1.jpg', 'rb')
            bot.send_photo(callback.message.chat.id, file)
            bot.send_message(callback.message.chat.id, '–ø—Ä–æ—Ö–æ–¥–∏—Ç–µ –ø–æ –∫–æ—Ä–∏–¥–æ—Ä—É –≤–ø–µ—Ä–µ–¥')
            file = open('data/checkroom2.jpg', 'rb')
            bot.send_photo(callback.message.chat.id, file)
            bot.send_message(callback.message.chat.id, '–ø–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ—Ç–µ –Ω–∞–ª–µ–≤–æ –∏ –≤—Ö–æ–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–≤–∞–ª–∫—É, –≤—ã –Ω–∞ –º–µ—Å—Ç–µ!',
                             reply_markup=btn_for_questions())
        elif callback.data == 'qw_2':
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            file = open('data/rating1.png', 'rb')
            bot.send_photo(callback.message.chat.id, file)
            markup = types.InlineKeyboardMarkup()
            markup.add(
                types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–æ—Ñ–∏–ª—å/–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è', url='https://uniade.world/profile'))
            bot.send_message(callback.message.chat.id,
                             '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Å–∞–π—Ç–µ (–µ—Å–ª–∏ –µ—â–µ —ç—Ç–æ–≥–æ –Ω–µ —Å–¥–µ–ª–∞–ª–∏), –≤ –ø—Ä–æ—Ñ–∏–ª–µ –≤—ã–±—Ä–∞—Ç—å "–¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è"',
                             reply_markup=markup)
            file = open('data/rating2.png', 'rb')
            bot.send_photo(callback.message.chat.id, file)
            bot.send_message(callback.message.chat.id,
                             '–í —Ä–∞–∑–¥–µ–ª–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –±—É–¥–µ—Ç —É–∫–∞–∑–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞ (—Ç–≤–æ–π —Ä–µ–π—Ç–∏–Ω–≥) –∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è',
                             reply_markup=btn_for_questions())
        elif callback.data == 'qw_3':
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            markup = types.InlineKeyboardMarkup()
            markup.add(
                types.InlineKeyboardButton('–°–º–æ—Ç—Ä–µ—Ç—å!', callback_data='grade'))
            bot.send_message(callback.message.chat.id,
                             '–í—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ü–µ–Ω–∫–∏ —É—á–∞—Å—Ç–Ω–∏—Ü –ø—Ä–æ—à–ª–æ–≥–æ —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω–æ–≥–æ —ç—Ç–∞–ø–∞',
                             reply_markup=btn_for_questions())
        elif callback.data == 'qw_4':
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            bot.send_message(callback.message.chat.id, '–§–æ—Ç–æ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –Ω–∞ —Å–∞–π—Ç–µ –Ω–∏–∂–µ —Å 16 –∞–ø—Ä–µ–ª—è')
            file = open('data/photo_qr.png', 'rb')
            bot.send_photo(callback.message.chat.id, file, reply_markup=btn_for_questions())
            markup = types.InlineKeyboardMarkup()
            markup.add(
                types.InlineKeyboardButton('–ó–∞–∫–∞–∑–∞—Ç—å', url='http://kondakov.online/order.html'))
            bot.send_message(callback.message.chat.id,
                             '–°–∞–π—Ç —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏',
                             reply_markup=markup)
        elif callback.data == 'qw_5':
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            bot.send_message(callback.message.chat.id, '–æ—Ç–≤–µ—Ç 5', reply_markup=btn_for_questions())
        elif callback.data == 'qw_6':
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            bot.send_message(callback.message.chat.id,
                             '–ß—Ç–æ–±—ã —Å—É–¥—å–∏ –ø–æ–Ω–∏–º–∞–ª–∏ —Ç–∞–π–º–∏–Ω–≥ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ø—Ä–∞–≤–∏–ª–∞–º!',
                             reply_markup=btn_for_questions())
        elif callback.data == 'qw_7':
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            markup = types.InlineKeyboardMarkup()
            markup.add(
                types.InlineKeyboardButton(
                    '–°–∫–æ—Ä–µ–µ —Å–º–æ—Ç—Ä–µ—Ç—å!!!', url='https://vk.com/textlive547685'))
            bot.send_message(callback.message.chat.id,
                             '–ü–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ.',
                             reply_markup=markup)
            bot.send_message(callback.message.chat.id, '–ö–æ–≥–¥–∞ –æ–Ω–∞ –±—É–¥–µ—Ç –ø—Ä–∏–Ω—è—Ç–∞, –í—ã —Å–º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –≤ —Ä–µ–ø–æ—Ä—Ç–∞–∂–µ',
                             reply_markup=btn_for_questions())
        elif callback.data == 'qw_8':
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            markup = types.InlineKeyboardMarkup()
            markup.add(
                types.InlineKeyboardButton(
                    '–°–∫–æ—Ä–µ–µ —Å–º–æ—Ç—Ä–µ—Ç—å!!!', url='https://vk.com/textlive547685'))
            bot.send_message(callback.message.chat.id,
                             '–ü–æ–¥–∞–π—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞ –≤—Å—Ç—É–ø–ª–µ–Ω–∏–µ –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ.',
                             reply_markup=markup)
            bot.send_message(callback.message.chat.id,
                             '–ö–æ–≥–¥–∞ –æ–Ω–∞ –±—É–¥–µ—Ç –ø—Ä–∏–Ω—è—Ç–∞, –í—ã —Å–º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å –¥–æ–ª–≥–æ–∂–¥–∞–Ω–Ω—ã–µ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è',
                             reply_markup=btn_for_questions())

        elif callback.data == 'qw_9':
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            file = open('data/online1.png', 'rb')
            bot.send_photo(callback.message.chat.id, file)
            markup = types.InlineKeyboardMarkup()
            markup.add(
                types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–æ—Ñ–∏–ª—å/–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è', url='https://uniade.world/profile'))
            bot.send_message(callback.message.chat.id,
                             '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Å–∞–π—Ç–µ (–µ—Å–ª–∏ –µ—â–µ —ç—Ç–æ–≥–æ –Ω–µ —Å–¥–µ–ª–∞–ª–∏), '
                             '–≤ –ø—Ä–æ—Ñ–∏–ª–µ –≤—ã–±—Ä–∞—Ç—å "–ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É"',
                             reply_markup=markup)
            file = open('data/online2.png', 'rb')
            bot.send_photo(callback.message.chat.id, file)
            bot.send_message(callback.message.chat.id, '–ü—Ä–∏ –æ–ø–ª–∞—Ç–µ –≤—ã–±—Ä–∞—Ç—å "–æ–Ω–ª–∞–π–Ω"',
                             reply_markup=btn_for_questions())
        elif callback.data == 'qw_10':
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            file = open('data/photo1.png', 'rb')
            bot.send_photo(callback.message.chat.id, file)
            markup = types.InlineKeyboardMarkup()
            markup.add(
                types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –≤ –ø—Ä–æ—Ñ–∏–ª—å/–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è', url='https://uniade.world/profile'))
            bot.send_message(callback.message.chat.id,
                             '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ —Å–∞–π—Ç–µ (–µ—Å–ª–∏ –µ—â–µ —ç—Ç–æ–≥–æ –Ω–µ —Å–¥–µ–ª–∞–ª–∏), '
                             '–≤ –ø—Ä–æ—Ñ–∏–ª–µ –≤—ã–±—Ä–∞—Ç—å "–∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –¥–ª—è —Ç—É—Ä–Ω–∏—Ä–∞"',
                             reply_markup=markup)
            file = open('data/photo2.png', 'rb')
            bot.send_photo(callback.message.chat.id, file)
            bot.send_message(callback.message.chat.id,
                             '–î–∞–ª–µ–µ –Ω–∞–∂–º–∏—Ç–µ "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ"', reply_markup=btn_for_questions())
        elif callback.data == 'qw_11':
            bot.delete_message(callback.message.chat.id, callback.message.message_id)
            bot.send_message(callback.message.chat.id, '–°–ø—Ä–∞–≤–∞ –æ—Ç –≤—Ö–æ–¥–∞ –≤ –∞—Ä–∫—É –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Å—Ç–æ–ª dj, '
                                                       '–∏–º–µ–Ω–Ω–æ —ç—Ç–æ–º—É —Ö–∞—Ä–∏–∑–º–∞—Ç–∏—á–Ω–æ–º—É –º—É–∂—á–∏–Ω–µ –Ω—É–∂–Ω–æ —Å–¥–∞—Ç—å —Ñ–ª–µ—à–∫—É XD')
            file = open('data/dj.jpg', 'rb')
            bot.send_photo(callback.message.chat.id, file, reply_markup=btn_for_questions())

        elif callback.data == 'qw_quit':
            bot.edit_message_text(f'–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ç–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:',
                                  reply_markup=make_main_markup(callback.message),
                                  chat_id=callback.message.chat.id,
                                  message_id=callback.message.message_id)


@bot.message_handler(content_types=['text'])
def func(message):
    if message.text == "‚úÖ –î–∞":
        user_name = get_data_from_column('Name', message.chat.id)
        name_of_smb = get_data_from_column('Name_of_smb', message.chat.id)
        if get_data_from_column('Command', message.chat.id) == 'add_admin':
            mess = add_admin(user_name, name_of_smb)
            bot.send_message(message.chat.id, mess, reply_markup=btn_for_exit())

        elif get_data_from_column('Command', message.chat.id) == 'delete_admin':
            mess = delete_your_admins(user_name, name_of_smb)
            bot.send_message(message.chat.id, mess, reply_markup=btn_for_exit())

    elif message.text == "‚ùå –ù–µ—Ç":
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        btn1 = types.KeyboardButton('–ù–∞–ø–∏—Å–∞—Ç—å –µ—â–µ —Ä–∞–∑')
        btn2 = types.KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
        markup.add(btn1, btn2)
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–µ—Ç–µ:', reply_markup=markup)

    elif message.text == '–ù–∞–ø–∏—Å–∞—Ç—å –µ—â–µ —Ä–∞–∑':
        bot.send_message(message.chat.id, "–ü–æ–≤—Ç–æ—Ä–∏—Ç–µ")
        bot.register_next_step_handler(message, inp_name)

    elif message.text == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' or message.text == '–ù–∞–∑–∞–¥':
        admin(message)

    elif message.text == '–ö –≤–æ–ø—Ä–æ—Å–∞–º':
        bot.send_message(message.chat.id, '–í–æ–ø—Ä–æ—Å—ã:', reply_markup=questions())


@bot.message_handler(content_types=['photo'])
def get_photo(message):
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('–ü–µ—Ä–µ–π—Ç–∏ –≤ –≤–∫', url='https://vk.com/rg_child_league'))
    bot.reply_to(message, '–ó–¥–æ—Ä–æ–≤–æ! –ù–µ —Ö–æ—Ç–∏—Ç–µ –ª–∏ –í—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —ç—Ç–æ —Ñ–æ—Ç–æ –¥–ª—è –ø–æ—Å—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ?', reply_markup=markup)


@bot.message_handler(content_types=['audio'])
def send_audio_into_folder(message):
    if get_data_from_column('Command', message.chat.id) == 'sending_file':
        file_info = bot.get_file(message.audio.file_id)
        downloaded_file = bot.download_file(file_info.file_path)

        fio = get_data_from_column('Fio', message.chat.id)
        name = message.audio.file_name
        your_club = get_data_from_column('Your_club', message.chat.id)

        make_new_folder_from_user(fio, name, downloaded_file)

        print(your_club, fio, name)

        resp = download_file_to_club(your_club, fio, name)
        shutil.rmtree(f'data/users_files/{fio}')
        if resp is False:
            bot.send_message(message.chat.id, '–§–∞–π–ª —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç\n'
                                              '–ü–æ–º–µ–Ω—è–π—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ –µ–≥–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ')
        else:
            bot.send_message(message.chat.id, '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω', reply_markup=btn_for_exit())
            insert_into_db_data('send_file_to_folder', 'Command', message.chat.id)


# –í–≤–æ–¥ —Ñ–∞–º–∏–ª–∏–∏ –∏ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def inp_folder(message):
    if message.text == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        bot.delete_message(message.chat.id, message.message_id - 1)
        admin(message)
        return 0
    text = message.text
    text = text.capitalize()
    insert_into_db_data(text, 'Fio', message.chat.id)
    bot.send_message(message.chat.id, f'–í–∞—à–∞ –ø–∞–ø–∫–∞: \n{text}')
    insert_into_db_data('sending_file', 'Command', message.chat.id)
    bot.send_message(message.chat.id, f'–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–∞–π–ª —Å –º—É–∑—ã–∫–æ–π (.mp3)')


# –í–≤–æ–¥ –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∞
def inp_name(message):
    if message.text == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        bot.delete_message(message.chat.id, message.message_id - 1)
        bot.delete_message(message.chat.id, message.message_id - 2)
        admin(message)
        return 0
    text = message.text
    insert_into_db_data(text, 'Name_of_smb', message.chat.id)
    bot.send_message(message.chat.id, f'–¢–∞–∫–æ–µ –∏–º—è: {text}?')
    yes_or_no(message)


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
def yes_or_no(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, is_persistent=False)
    btn1 = types.KeyboardButton('‚úÖ –î–∞')
    btn2 = types.KeyboardButton('‚ùå –ù–µ—Ç')
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id, '–î–∞/–ù–µ—Ç', reply_markup=markup)


def del_admin(message):
    if message.text == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        bot.delete_message(message.chat.id, message.message_id - 1)
        bot.delete_message(message.chat.id, message.message_id - 2)
        admin(message)
        return 0
    bot.send_message(message.chat.id, '–í–Ω–∏–º–∞–Ω–∏–µ! –í—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å —Ç–æ–ª—å–∫–æ —Ç–µ—Ö –∞–¥–º–∏–Ω–æ–≤, –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –¥–æ–±–∞–≤–ª—è–ª–∏')
    bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ '–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ' –∞–¥–º–∏–Ω–∞",
                     reply_markup=btn_for_exit())
    bot.register_next_step_handler(message, inp_name)


def inp_question(message):
    if message.text == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        admin(message)
        return 0
    question_from_user = message.text
    bot.send_message(message.chat.id, f"–í–∞—à –≤–æ–ø—Ä–æ—Å:\n{question_from_user}", reply_markup=btn_for_exit())
    send_questions(message.chat.id, question_from_user)
    admin_list = ladmins()
    for i in admin_list:
        bot.send_message(int(i), '–ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!!!')


def answer(message):
    text = message.text
    bot.send_message(message.chat.id, f'–í–∞—à –æ—Ç–≤–µ—Ç: {text}')
    printed_work = get_data_from_column('Printed_work', message.chat.id)
    print(printed_work)
    send_answer_from_admin(message, get_id_from_question(printed_work), text)


def show_club():
    markup = types.InlineKeyboardMarkup()
    for club in CLUB:
        btn = types.InlineKeyboardButton(club, callback_data=club)
        markup.add(btn)

    exit_btn = types.InlineKeyboardButton('–í—ã–π—Ç–∏', callback_data='qw_quit')
    markup.add(exit_btn)

    return markup


def grade(message):
    if message.text == '–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        bot.delete_message(message.chat.id, message.message_id - 1)
        admin(message)
        return 0
    text = message.text
    res = grading(text)
    bot.send_message(message.chat.id, res, reply_markup=btn_for_exit())


def show_questions_from_users():
    global consult
    markup = types.InlineKeyboardMarkup()
    consult = show_questions()
    for i in consult:
        markup.add(types.InlineKeyboardButton(f'{i[1]}', callback_data=i[0]))
    ret = types.InlineKeyboardButton(f'–í—ã–π—Ç–∏', callback_data='qw_quit')
    markup.add(ret)

    return markup


def send_answer_from_admin(message, id_of_user, text):
    printed_work = get_data_from_column('Questions', id_of_user)
    delete_questions(printed_work)
    bot.send_message(id_of_user, f'–û—Ç–≤–µ—Ç –æ—Ç –∞–¥–º–∏–Ω–∞: {text}')
    admin(message)


# –í—ã–≤–æ–¥–∏—Ç –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –¢—É—Ä–Ω–∏—Ä–æ–≤
def change_on_table():
    markup = types.InlineKeyboardMarkup()
    for i in CLUB:
        markup.add(types.InlineKeyboardButton(f'{i}', callback_data=i))
    ret = types.InlineKeyboardButton(f'–í—ã–π—Ç–∏', callback_data='qw_quit')
    markup.add(ret)

    return markup


# –ì–ª–∞–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
def make_main_markup(message):
    name, name2, id_of_user = message.chat.username, message.chat.first_name, message.chat.id

    admin_status = check_admin_status(name)  # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞–¥–º–∏–Ω–∞
    add_user(name, name2, id_of_user)  # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    markup = types.InlineKeyboardMarkup()
    btn3 = types.InlineKeyboardButton('–û—Ü–µ–Ω–∫–∏ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è', callback_data='grade')
    markup.row(btn3)
    btn4 = types.InlineKeyboardButton('–ú—É–∑—ã–∫–∞', callback_data='music')
    markup.row(btn4)
    btn6 = types.InlineKeyboardButton('–û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º', callback_data='send_questions')
    markup.row(btn6)
    btn7 = types.InlineKeyboardButton('–ß–∞–í–æ‚ÅâÔ∏è', callback_data='F_A_Q')
    btn8 = types.InlineKeyboardButton('–û –Ω–∞—Å', callback_data='our_social_networks')
    markup.row(btn7, btn8)
    btn9 = types.InlineKeyboardButton('–í–∏–¥–µ–æ-live', callback_data='video_live')
    btn10 = types.InlineKeyboardButton('–†–µ–ø–æ—Ä—Ç–∞–∂', callback_data='text_live')
    markup.row(btn9, btn10)
    if admin_status:
        btn_for_admin1 = types.InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞', callback_data='add_new_admin')
        markup.row(btn_for_admin1)
        btn_for_admin2 = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞', callback_data='delete_admin')
        markup.row(btn_for_admin2)
        btn_for_admin3 = types.InlineKeyboardButton('–í–æ–ø—Ä–æ—Å—ã –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
                                                    callback_data='show_questions_from_users')
        markup.row(btn_for_admin3)
        btn_for_admin3 = types.InlineKeyboardButton('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', callback_data='show_count_of_users')
        markup.row(btn_for_admin3)
        btn_for_admin4 = types.InlineKeyboardButton('–¢–∞–±–ª–∏—Ü–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', callback_data='table')
        markup.row(btn_for_admin4)

    return markup


# –ö–Ω–æ–ø–∫–∏ —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏
def questions():
    markup2 = types.InlineKeyboardMarkup()
    markup2.add(types.InlineKeyboardButton('–ì–¥–µ —Ä–∞–∑–¥–µ–≤–∞–ª–∫–∞?', callback_data='qw_1'))  # —Ñ–æ—Ç–æ-—Ä—è–¥
    markup2.add(
        types.InlineKeyboardButton('–ì–¥–µ –Ω–∞–π—Ç–∏ —Ä–µ–π—Ç–∏–Ω–≥ –Æ–Ω–∏–∞–¥—ã?', callback_data='qw_2'))  # https://uniade.world/profile
    markup2.add(types.InlineKeyboardButton('–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ü–µ–Ω–∫–∏?',
                                           callback_data='qw_3'))
    markup2.add(types.InlineKeyboardButton('–ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏?', callback_data='qw_4'))
    markup2.add(types.InlineKeyboardButton('–ö–∞–∫ –Ω–∞–π—Ç–∏ –≤–∏–∑–∞–∂–∏—Å—Ç–∞ –Ω–∞ —Ç—É—Ä–Ω–∏—Ä–µ?', callback_data='qw_5'))
    markup2.add(types.InlineKeyboardButton('–ó–∞—á–µ–º –Ω—É–∂–µ–Ω –≥–æ–Ω–≥?', callback_data='qw_6'))
    markup2.add(types.InlineKeyboardButton('–ö–∞–∫–æ–π –ø–æ—Ç–æ–∫ –≤—ã—Å—Ç—É–ø–∞–µ—Ç?', callback_data='qw_7'))
    markup2.add(types.InlineKeyboardButton('–ö–∞–∫ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏—é?', callback_data='qw_8'))
    markup2.add(types.InlineKeyboardButton('–ö–∞–∫ –ø–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –Æ–Ω–∏–∞–¥–µ –æ–Ω–ª–∞–π–Ω?', callback_data='qw_9'))
    markup2.add(types.InlineKeyboardButton('–ö–∞–∫ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ, —á—Ç–æ–±—ã –ø–æ–ø–∞—Å—Ç—å –Ω–∞ —ç–∫—Ä–∞–Ω?', callback_data='qw_10'))
    markup2.add(types.InlineKeyboardButton('–ö—É–¥–∞ —Å–¥–∞–≤–∞—Ç—å –º—É–∑—ã–∫—É?', callback_data='qw_11'))
    markup2.add(types.InlineKeyboardButton('–≤—ã–π—Ç–∏', callback_data='qw_quit'))
    return markup2


# –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞
def btn_for_exit():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, is_persistent=False)
    btn = types.KeyboardButton('–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é')
    markup.add(btn)

    return markup


def btn_for_questions():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, is_persistent=False)
    btn = types.KeyboardButton('–ö –≤–æ–ø—Ä–æ—Å–∞–º')
    markup.add(btn)

    return markup


if __name__ == '__main__':
    bot.polling(none_stop=True)
